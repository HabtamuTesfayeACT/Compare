# Generated by Django 4.2.3 on 2023-07-23 08:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is_active')),
                ('is_user', models.BooleanField(default=False, verbose_name='Is_user')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is_admin')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user/Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='anounnced',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announced_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
                ('battery_type', models.CharField(max_length=50, null=True)),
                ('fast_charging', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('url', models.URLField()),
                ('url_to_image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('bulid', models.CharField(max_length=50)),
                ('Sim_Card', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('logo', models.ImageField(upload_to='brands')),
            ],
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modules', models.CharField(max_length=50)),
                ('feature', models.CharField(max_length=50)),
                ('video', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Connectivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wlan', models.CharField(max_length=50)),
                ('bluethooth', models.CharField(max_length=50)),
                ('gps', models.CharField(max_length=50, null=True)),
                ('nfc', models.CharField(max_length=50, null=True)),
                ('infrared', models.CharField(max_length=50, null=True)),
                ('radio', models.CharField(max_length=50, null=True)),
                ('usb', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Dimensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_type', models.CharField(max_length=50)),
                ('size_inches', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_slot', models.CharField(max_length=50)),
                ('internal', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50, null=True)),
                ('battery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.battery')),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.body')),
                ('connectivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.connectivity')),
                ('display', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.display')),
                ('main_camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_camera', to='compare.camera')),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.memory')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(upload_to='phones')),
                ('name', models.CharField(max_length=50)),
                ('Phone_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.model')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.brand')),
                ('released_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.anounnced')),
            ],
        ),
        migrations.CreateModel(
            name='Plattform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operating_sys', models.CharField(max_length=50)),
                ('chipset', models.CharField(max_length=50)),
                ('CPU', models.CharField(max_length=50, null=True)),
                ('GPU', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.CharField(max_length=50)),
                ('price', models.FloatField()),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('review_text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.phone')),
            ],
        ),
        migrations.AddField(
            model_name='model',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.plattform'),
        ),
        migrations.AddField(
            model_name='model',
            name='selfi_camera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selfi_camera', to='compare.camera'),
        ),
        migrations.AddField(
            model_name='display',
            name='resolution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.resolution'),
        ),
        migrations.CreateModel(
            name='ComparisonHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_1', models.CharField(max_length=100)),
                ('phone_2', models.CharField(max_length=100)),
                ('comparison_result', models.CharField(max_length=100)),
                ('comparison_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='body',
            name='dimensions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compare.dimensions'),
        ),
    ]
